using Content.Client.Audio;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;
using Robust.Shared.Utility;

namespace Content.Client.UI.Controls;

[Virtual]
public class ContentWindow : DefaultWindow
{
	[Dependency] private readonly MainMenuAudio _audio = default!;

	public ContentWindow()
	{
		IoCManager.InjectDependencies(this);

		CustomCursor.SetCursor(this);

		_audio.AddButtonSound("pop.wav", CloseButton);
	}

	protected override void FrameUpdate(FrameEventArgs args)
	{
		base.FrameUpdate(args);

		if (CustomCursorShape == null && DefaultCursorShape == CursorShape.Arrow)
		{
			CustomCursor.SetCursor(this); //fuck it too lazy to fix cursor properly
		}
	}
}